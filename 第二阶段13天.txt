				第二阶段13天

	教学内容：
			
			转发和重定向  HTTP协议讲解   REQUEST  RESPONSE 			

    一。转发和重定向

        使用场景： Servlet java 处理业务逻辑！
        HTML --->  FORM表单/js window.location.href="servlet路径" ---> Servlet (操作数据库) ---> 转发或者重定向 --> HTML/JSP/Servlet


        别人找你借钱  

           不借    404 405 500

            

           	   我有钱，我借你！

           	      直接给钱


           	    浏览器  ---》 servlet 
           	    	    <---


           	   一下两个servlet以上解决
           	   不知道请求了第三方servlet
           	   转发
           	   request对象！

           	   我有五块钱，我给你找人借五块钱 我借你！ include

           	      我给你一部分，还有另外一部分我是找别人借的！（借钱人不知道）

           	   我没有钱，但是我都找别人给你借钱！ forward
 				 
 				  我一份没出，但是我找别人都给你借了！（借钱人也不知道）


 			   知道找第三个人！
 			   重定向
 			   response

           	   我没有钱，但是我告诉你谁有钱！你找他借！

           	      我一份没出！我没找别人借！我告诉你谁有！
           	      借钱人，再找别人借钱！


        转发：

            语法：
                1.获取转发器
                RequestDispatcher dispatcher = 
	    		request.getRequestDispatcher("/MyHtml.html");
			    
			    2.调用转发方法
		        dispatcher.include(request, response);
		        dispatcher.forward(request, response);

		        总结：

		        	转发路径是相对路径（资源相对于项目下的路径！）
		        	转发的目标 Servlet  HTML  JSP
		        	转发浏览器路径不发生改变！
		        	转发算作一次请求
		        	转发中request共享域可以使用！
		        	转发给浏览器返回的状态码是200！
		        	转发中include 允许第一个资源作出响应！
		        	转发中forward 第一个资源响应无效！
		        	转发的目标资源只能是当前项目中的！

		重定向
			
			修改状态码！告知请求路径

		    语法：    	
		     分开写法
             response.setStatus(302); //返回对象的状态码！
		     response.setHeader("location", "绝对路径"); //响应头

		     组合写法
             response.sendRedirect("/day13_zf/index.jsp");


             总结：

                 重定向指向的资源可以使项目内部，也可以是项目外部！
                 重定向资源路径是绝对路径
                 重定向浏览器改变路径！
                 重定向不属于一次请求!
                 重定向不可以是使用request共享域！
                 重定向的返回码3xx系列


        两者的使用场景： 

        	 资源的跳转！ A - B 
        	 思考：要跳转得路径是否是本程序资源！
        	       不是--》 重定向  项目中使用第三方都是重定向！
        	       是： 转发和重定向都可以！
        	       	    路径是否改变? 
        	       	    	 改变：重定向
        	       	    	 不改变： 转发！ 


    二。HTTP协议

    	 HTTP是一个客户端和服务器端请求和应答的标准（TCP）

    	 HTTP协议的请求方式：

    	    GET : 
    	    	请求参数直接追加到路径后面！
    	    	URL?参数名=参数值&
    	    	GET请求方式传递参数大小有限制！2kb!
    	    POST:
    	        请求参数追加到请求体中！
    	        POST请求参数大小理论没有限制！

    	    敏感：使用POST
    	          上传使用POST


    	HTTP包含以下两部分：
    	

    	    请求：Request

    	      请求头：

    	      包含请求的路径和方式和协议版本
    	      GET /day13_zf/servlet/ServletA HTTP/1.1
    	      METHOD URL HTTP/1.1

    	      请求信息头

    	      本次请求的一些信息！
    	      浏览器信息，支持的数据格式等等！

    	      User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0


    	      请求参数 (重要)
    	      key - value 

    	    响应: Response

    	      响应头
    	      协议版本  状态码
    	      HTTP/1.1  200
    	      状态码： 告知浏览器（客户端）处理方式！

    	      404 403 405  失败！404未找到！ 405未认证！

    	      3xx  重定向

    	      500  服务器内部错误！java代码报错！

    	      200 202  成功

    	      1xx


    	      响应信息头
    	      服务器告知浏览器（客户端的信息）

    	      content-length:99 告知浏览器数据长度
    	      location:url 重定向的位置！
    	      content-type:text/html;charset=utf-8;

    	      response.setHeader("location","url");

    	      响应正文

    	      页面显示的HTML数据！


    三。HttpServletResponse 
        set

	    服务器软件封装的一个响应对象！传service方法！最终到do方法！        
    只要向响应对象中写入数据！就相当于写到响应！写到请求的客户端！

    例:response.getWriter().print("字符串");  浏览器显示字符串了！

    响应头

    	响应码： 正常情况下，响应码不需要处理！当重定向的时候！
    	setStatus(int sc) ;

    响应信息头
    	
    	setHeader(String name, String value) 
        addHeader(String name, String value)

 	    setHeader("refresh","5;url=绝对路径") 
 	    setHeader("disposition","attachment;filename=xx");
 	    =
 	    addHeader("refresh","5");
 	    addHeader("refresh","url="绝对路径");

        例子：
          response.setStatus(302);
          response.setHeader("location","绝对路径");

    响应正文

      ServletOutputStream getOutputStream()  当向浏览器写回二进制数据！
      PrintWriter getWriter() 向浏览器写回字符数据！
        

    编码格式     

      setCharacterEncoding(String charset) 
      setContentType(String type) *****


      解决中文乱码：

         1.setCharacterEncoding(String charset)  设置服务器传递出去不乱码
           print("<html><head><meta charset=UTF-8> 中文</html>");

         2.	//出服务器软件不乱码
		   response.setCharacterEncoding("UTF-8");
		   //响应信息头设置告知浏览器的信息
		   response.setHeader("Content-Type", "text/html;charset=UTF-8");  

		 3.setContentType("text/html;charset=UTF-8")

    其他： 
      addCookie(Cookie cookie)  给页面返回一个Cookie对象的方法
      sendRedirect(String location)  重定向组合方法
      
    

    问题：

        写回中文出现乱码！
        情况1：什么都不做！ ？？？？ 找到不码
        情况2：GBK/UTF-8 有一部分人乱码！一部分不乱码！

        ISO-8859-1
        UTF-8
        GBK

      练习：

          1.返回一段中文！   编码格式
          2.返回一个文件（文本图片压缩文件...） 返回字节文件
          3.返回一个验证码  第三方工具小练习

    四。HttpServeltRequest	  

    	共享域
    	   set
    	   get
    	   removeAttribute(); 

    	共享域： 一次请求！一次请求或者转发   


    	客户端向服务器发送的请求对象！

    	get


    	请求头

    	  GET URL HTTP/1.1
    	  如何请求方式和如何获取路径信息（请求路径请求的ip）！

    	  getMethod() 获取请求方式
    	  getRemoteAddr() 获取请求的id地址
    	  getContextPath() 返回  /项目名 重要
    	  getRequestURL() 返回访问路径
    	  response.sendRedict(request.getContextPath()+"/资源路径");

    	请求信息头

    	  如何获取信息头
          getHeader(String name) 
          getHeaders(String name);

    	请求参数

    	  如何获取请求参数
    	  form key - value 

    	  String getParameter(String name) 
    	  根据name返回对应的value值！如果是多选！只会返回一个值！

    	  String[] getParameterValues(String name) 对应的多选框
    	  根据name返回对应的value值！value是一个字符串数组！如果对应一个值的
    	  数组长度是1！
          
 		  
 		  Map<String,String[]> getParameterMap();
 		  返回一个map!将name value成对装入map中！


 		  key - value    username  root
 		  key - value    password  111
 		  key - value1 value2  hobby  1,2,3
          
          username [root]
          password [111]
          hobby    [1,2,3]
 		 
 		  Enumeration getParameterNames()  
          返回所有提交的name值!


    	  如何获取流的形式长传的数据！	
    	  ServletInputStream getInputStream()  （文件上传！）


    	设置编码格式的方式

    	  setCharacterEncoding(String env) 


    	其他方式：

    	 getRequestDispatcher(String path)  转发器
    	     .include
    	     .forward

    	 getCookies();
    	 getSession();


    五。做作业

        1.登录添加验证码验证！（登录注册）
        2.抄request和response 5遍 转发重定向1遍
        3.下载照片墙